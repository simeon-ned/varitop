:py:mod:`varitop.problem`
=========================

.. py:module:: varitop.problem

.. autoapi-nested-parse::

   Problem module



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   varitop.problem.VaritopProblem




.. py:class:: VaritopProblem


   Variational Optimization Problem

   .. py:property:: free
      :type: bool

      Determines if body is free-floating


   .. py:property:: rule
      :type: casadi.Function

      Midpoint rule


   .. py:property:: dynamics
      :type: casadi.Function

      System dynamics


   .. py:property:: integrator
      :type: varitop.integrator.VariationalIntegrator

      Problem integrator


   .. py:property:: nodes
      :type: int

      Number of solution nodes


   .. py:property:: nq
      :type: int

      Number of generalized coordinates


   .. py:property:: nv
      :type: int

      Number of generalized velocities


   .. py:property:: nu
      :type: int

      Number of controls


   .. py:property:: state
      :type: varitop.variables.Variable

      System state (projected)


   .. py:property:: velocity
      :type: varitop.variables.Variable

      System velocty (projected)


   .. py:property:: control
      :type: varitop.variables.Variable

      System control (projected)


   .. py:method:: add_dynamics_constraints(constraints: List[casadi.Function])

      Add coonstraint for constrained dynamics model


   .. py:method:: add_forces(forces: List[casadi.Function])

      Add external forces


   .. py:method:: create_variable(variable: type[varitop.variables.Variable], name: str, dim: int, active: list[int] = None) -> varitop.variables.Variable

      Create a variable

      :param variable: which variable to create
      :param name: varaible name
      :param dim: variable dimensionality
      :param active: at which nodes variable is active
      :type variable: type[Variable]
      :type name: str
      :type dim: int
      :type active: list[int]


   .. py:method:: create_state(name: str, dim: int, active: list[int] = None) -> varitop.variables.Variable

      Create a state variable


   .. py:method:: create_velocity(name: str, active: list[int] = None) -> varitop.variables.Variable

      Create a velocity variable


   .. py:method:: create_momentum(name: str, active: list[int] = None) -> varitop.variables.Variable

      Create a momentum variable


   .. py:method:: create_control(name: str, active: list[int] = None) -> varitop.variables.Variable

      Create a control variable



