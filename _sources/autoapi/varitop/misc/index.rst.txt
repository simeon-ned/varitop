:py:mod:`varitop.misc`
======================

.. py:module:: varitop.misc

.. autoapi-nested-parse::

   Module utility functions



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   varitop.misc.q2rm
   varitop.misc.skew_quaternion
   varitop.misc.quat_prod
   varitop.misc.qconj
   varitop.misc.euler_rule



.. py:function:: q2rm(q: numpy.ndarray) -> numpy.ndarray

   Quaternion to rotation matrix

   :param q: row quaternion or list of row quaternions
   :type q: np.ndarray
   :return: rotation matrix / matrices
   :rtype: np.ndarray


.. py:function:: skew_quaternion(q1: casadi.SX) -> casadi.SX

   Skew symmetric quaternion matrix

   :param q1: quaternion to make matrix from
   :type q1: casadi.SX
   :return: L(q)
   :rtype: casadi.SX


.. py:function:: quat_prod(q1: casadi.SX, q2: casadi.SX) -> casadi.SX

   Quaternion product

   :param q1: first quaternion
   :param q2: second quaternion
   :type q1: casadi.SX
   :type q2: casadi.SX
   :return: q1 * q2
   :rtype: casadi.SX


.. py:function:: qconj(q: casadi.SX) -> casadi.SX

   Quaternion conjugate

   :param q: quaternion to conjugate
   :type q: casadi.SX
   :return: q*
   :rtype: casadi.SX


.. py:function:: euler_rule(q1: casadi.SX, q2: casadi.SX, dt: casadi.SX) -> [casadi.SX, casadi.SX]

   Euler midpoint rule for integration

   :param q1: first state
   :param q2: second state
   :param dt: time step
   :type q1: casadi.SX
   :type q2: casadi.SX
   :type dt: casadi.SX
   :return: q, dq
   :rtype: Tuple[casadi.SX, casadi.SX]


